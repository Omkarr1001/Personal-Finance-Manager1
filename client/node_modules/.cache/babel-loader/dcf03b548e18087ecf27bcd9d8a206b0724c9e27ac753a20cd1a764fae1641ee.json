{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Personal Finance Manager1\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport tradeAPI from \"../api/tradeAPI\";\nimport expenseAPI from \"../api/expenseAPI\";\nimport goalAPI from \"../api/goalAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // --- Queries ---\n  const {\n    data: rawPortfolio,\n    isLoading: portfolioLoading,\n    error: portfolioError,\n    refetch: refetchPortfolio\n  } = useQuery(\"portfolio\", () => tradeAPI.getPortfolio().then(res => res.data));\n  const {\n    data: rawExpenses,\n    isLoading: expensesLoading,\n    error: expensesError,\n    refetch: refetchExpenses\n  } = useQuery(\"expenses\", () => expenseAPI.getAll().then(res => res.data));\n  const {\n    data: rawGoals,\n    isLoading: goalsLoading,\n    error: goalsError,\n    refetch: refetchGoals\n  } = useQuery(\"goals\", () => goalAPI.getActive().then(res => res.data));\n\n  // --- Normalize Data ---\n  const portfolio = rawPortfolio || {};\n  const expenses = Array.isArray(rawExpenses) ? rawExpenses : [];\n  const goals = Array.isArray(rawGoals) ? rawGoals : [];\n\n  // --- Loading / Error States ---\n  if (portfolioLoading || expensesLoading || goalsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (portfolioError || expensesError || goalsError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading dashboard data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- Render Dashboard ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Invested: \", portfolio.totalInvested || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: \", portfolio.totalValue || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expenses (last 5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: expenses.slice(0, 5).map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [expense.name, \": \", expense.amount]\n        }, expense.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Goals (last 5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: goals.slice(0, 5).map(goal => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [goal.title, \": \", goal.targetAmount]\n        }, goal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"yPAGH0ng622J1xJ+ILrOanMmngQ=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useQuery","tradeAPI","expenseAPI","goalAPI","jsxDEV","_jsxDEV","Dashboard","_s","data","rawPortfolio","isLoading","portfolioLoading","error","portfolioError","refetch","refetchPortfolio","getPortfolio","then","res","rawExpenses","expensesLoading","expensesError","refetchExpenses","getAll","rawGoals","goalsLoading","goalsError","refetchGoals","getActive","portfolio","expenses","Array","isArray","goals","children","fileName","_jsxFileName","lineNumber","columnNumber","className","totalInvested","totalValue","slice","map","expense","name","amount","id","goal","title","targetAmount","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Personal Finance Manager1/client/src/pages/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport tradeAPI from \"../api/tradeAPI\";\r\nimport expenseAPI from \"../api/expenseAPI\";\r\nimport goalAPI from \"../api/goalAPI\";\r\n\r\nconst Dashboard = () => {\r\n  // --- Queries ---\r\n  const {\r\n    data: rawPortfolio,\r\n    isLoading: portfolioLoading,\r\n    error: portfolioError,\r\n    refetch: refetchPortfolio,\r\n  } = useQuery(\"portfolio\", () =>\r\n    tradeAPI.getPortfolio().then((res) => res.data)\r\n  );\r\n\r\n  const {\r\n    data: rawExpenses,\r\n    isLoading: expensesLoading,\r\n    error: expensesError,\r\n    refetch: refetchExpenses,\r\n  } = useQuery(\"expenses\", () =>\r\n    expenseAPI.getAll().then((res) => res.data)\r\n  );\r\n\r\n  const {\r\n    data: rawGoals,\r\n    isLoading: goalsLoading,\r\n    error: goalsError,\r\n    refetch: refetchGoals,\r\n  } = useQuery(\"goals\", () =>\r\n    goalAPI.getActive().then((res) => res.data)\r\n  );\r\n\r\n  // --- Normalize Data ---\r\n  const portfolio = rawPortfolio || {};\r\n  const expenses = Array.isArray(rawExpenses) ? rawExpenses : [];\r\n  const goals = Array.isArray(rawGoals) ? rawGoals : [];\r\n\r\n  // --- Loading / Error States ---\r\n  if (portfolioLoading || expensesLoading || goalsLoading) {\r\n    return <div>Loading dashboard...</div>;\r\n  }\r\n\r\n  if (portfolioError || expensesError || goalsError) {\r\n    return <div>Error loading dashboard data.</div>;\r\n  }\r\n\r\n  // --- Render Dashboard ---\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Dashboard</h1>\r\n\r\n      <section>\r\n        <h2>Portfolio</h2>\r\n        <p>Total Invested: {portfolio.totalInvested || 0}</p>\r\n        <p>Total Value: {portfolio.totalValue || 0}</p>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Expenses (last 5)</h2>\r\n        <ul>\r\n          {expenses.slice(0, 5).map((expense) => (\r\n            <li key={expense.id}>\r\n              {expense.name}: {expense.amount}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Active Goals (last 5)</h2>\r\n        <ul>\r\n          {goals.slice(0, 5).map((goal) => (\r\n            <li key={goal.id}>\r\n              {goal.title}: {goal.targetAmount}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}