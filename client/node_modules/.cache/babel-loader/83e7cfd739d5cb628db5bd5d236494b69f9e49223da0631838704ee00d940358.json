{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst AI_SERVICE_URL = process.env.REACT_APP_AI_SERVICE_URL || 'http://localhost:8000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Trade API\nexport const tradeAPI = {\n  getAll: () => api.get('/trades'),\n  getById: id => api.get(`/trades/${id}`),\n  create: data => api.post('/trades', data),\n  update: (id, data) => api.put(`/trades/${id}`, data),\n  delete: id => api.delete(`/trades/${id}`),\n  getPortfolio: () => api.get('/trades/portfolio')\n};\n\n// Expense API\nexport const expenseAPI = {\n  getAll: () => api.get('/expenses'),\n  getById: id => api.get(`/expenses/${id}`),\n  create: data => api.post('/expenses', data),\n  update: (id, data) => api.put(`/expenses/${id}`, data),\n  delete: id => api.delete(`/expenses/${id}`),\n  getSummary: () => api.get('/expenses/summary'),\n  getByCategory: category => api.get(`/expenses/category/${category}`)\n};\n\n// Goal API\nexport const goalAPI = {\n  getAll: () => api.get('/goals'),\n  getById: id => api.get(`/goals/${id}`),\n  create: data => api.post('/goals', data),\n  update: (id, data) => api.put(`/goals/${id}`, data),\n  delete: id => api.delete(`/goals/${id}`),\n  getActive: () => api.get('/goals/active'),\n  updateProgress: (id, data) => api.put(`/goals/${id}/progress`, data)\n};\n\n// AI Service API\nexport const aiAPI = {\n  predictPrice: data => axios.post(`${AI_SERVICE_URL}/predict-price`, data),\n  getRecommendations: data => axios.post(`${AI_SERVICE_URL}/get-recommendations`, data),\n  analyzeMarket: data => axios.post(`${AI_SERVICE_URL}/analyze-market`, data),\n  healthCheck: () => axios.get(`${AI_SERVICE_URL}/health`)\n};\n\n// Market Data API\nexport const marketAPI = {\n  getCurrentPrice: symbol => api.get(`/market/price/${symbol}`),\n  getQuote: symbol => api.get(`/market/quote/${symbol}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","AI_SERVICE_URL","REACT_APP_AI_SERVICE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","tradeAPI","getAll","get","getById","id","data","post","update","put","delete","getPortfolio","expenseAPI","getSummary","getByCategory","category","goalAPI","getActive","updateProgress","aiAPI","predictPrice","getRecommendations","analyzeMarket","healthCheck","marketAPI","getCurrentPrice","symbol","getQuote"],"sources":["C:/Users/Admin/Desktop/Personal Finance Manager1/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\nconst AI_SERVICE_URL = process.env.REACT_APP_AI_SERVICE_URL || 'http://localhost:8000';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Trade API\r\nexport const tradeAPI = {\r\n  getAll: () => api.get('/trades'),\r\n  getById: (id) => api.get(`/trades/${id}`),\r\n  create: (data) => api.post('/trades', data),\r\n  update: (id, data) => api.put(`/trades/${id}`, data),\r\n  delete: (id) => api.delete(`/trades/${id}`),\r\n  getPortfolio: () => api.get('/trades/portfolio'),\r\n};\r\n\r\n// Expense API\r\nexport const expenseAPI = {\r\n  getAll: () => api.get('/expenses'),\r\n  getById: (id) => api.get(`/expenses/${id}`),\r\n  create: (data) => api.post('/expenses', data),\r\n  update: (id, data) => api.put(`/expenses/${id}`, data),\r\n  delete: (id) => api.delete(`/expenses/${id}`),\r\n  getSummary: () => api.get('/expenses/summary'),\r\n  getByCategory: (category) => api.get(`/expenses/category/${category}`),\r\n};\r\n\r\n// Goal API\r\nexport const goalAPI = {\r\n  getAll: () => api.get('/goals'),\r\n  getById: (id) => api.get(`/goals/${id}`),\r\n  create: (data) => api.post('/goals', data),\r\n  update: (id, data) => api.put(`/goals/${id}`, data),\r\n  delete: (id) => api.delete(`/goals/${id}`),\r\n  getActive: () => api.get('/goals/active'),\r\n  updateProgress: (id, data) => api.put(`/goals/${id}/progress`, data),\r\n};\r\n\r\n// AI Service API\r\nexport const aiAPI = {\r\n  predictPrice: (data) => axios.post(`${AI_SERVICE_URL}/predict-price`, data),\r\n  getRecommendations: (data) => axios.post(`${AI_SERVICE_URL}/get-recommendations`, data),\r\n  analyzeMarket: (data) => axios.post(`${AI_SERVICE_URL}/analyze-market`, data),\r\n  healthCheck: () => axios.get(`${AI_SERVICE_URL}/health`),\r\n};\r\n\r\n// Market Data API\r\nexport const marketAPI = {\r\n  getCurrentPrice: (symbol) => api.get(`/market/price/${symbol}`),\r\n  getQuote: (symbol) => api.get(`/market/quote/${symbol}`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}